type NewUser @model @auth(rules: [{allow: private}]) {
  id: ID!
  firstName: String!
  lastName: String!
  email: AWSEmail!
  phone: AWSPhone
  diveMeetsID: String
  accountType: String!
  athlete: NewAthlete @hasOne
  coach: CoachUser @hasOne
  followed: [NewFollowed!]! @manyToMany(relationName: "NewUserNewFollowed")
}

type NewAthlete @model @auth(rules: [{allow: private}]) {
  id: ID!
  user: NewUser! @belongsTo
  team: NewTeam @belongsTo
  college: College @belongsTo
  heightFeet: Int!
  heightInches: Int!
  weight: Int!
  weightUnit: String!
  gender: String!
  age: Int!
  graduationYear: Int!
  highSchool: String!
  hometown: String!
  springboardRating: Float
  platformRating: Float
  totalRating: Float
  dives: [Dive]! @hasMany
  videos: [Video]! @hasMany
}

type Video @model @auth(rules: [{allow: private}]) {
  id: ID!
  athlete: NewAthlete! @belongsTo
  link: AWSURL!
  title: String!
  description: String
  uploadDate: AWSDateTime!
}

type CoachUser @model @auth(rules: [{allow: private}]) {
  id: ID!
  user: NewUser @belongsTo
  team: NewTeam @belongsTo
}

type NewFollowed @model @auth(rules: [{allow: private}]) {
  id: ID!
  email: AWSEmail!
  users: [NewUser!]! @manyToMany(relationName: "NewUserNewFollowed")
}

type NewTeam @model @auth(rules: [{allow: private}]) {
  id: ID!
  name: String!
  coach: CoachUser @hasOne
  athletes: [NewAthlete!]! @hasMany
}

type College @model @auth(rules: [{allow: private}]) {
  id: ID!
  name: String!
  imageLink: AWSURL!
  athletes: [NewAthlete!]! @hasMany
}

type NewMeet @model @auth(rules: [{allow: private}]) {
  id: ID!
  meetID: Int!
  name: String!
  organization: String
  startDate: AWSDate!
  endDate: AWSDate!
  city: String!
  state: String!
  country: String!
  link: AWSURL!
  meetType: Int!
  events: [NewEvent!]! @hasMany
}

type NewEvent @model @auth(rules: [{allow: private}]) {
  id: ID!
  meet: NewMeet! @belongsTo
  name: String!
  date: AWSDate!
  link: AWSURL!
  numEntries: Int!
  dives: [Dive!]! @hasMany
}

type Dive @model @auth(rules: [{allow: private}]) {
  id: ID!
  event: NewEvent! @belongsTo
  athlete: NewAthlete! @belongsTo
  number: String!
  name: String!
  height: Float!
  netScore: Float!
  dd: Float!
  totalScore: Float!
  scores: [JudgeScore!]! @hasMany
}

type JudgeScore @model @auth(rules: [{allow: private}]) {
  id: ID!
  dive: Dive! @belongsTo
  score: Float!
}
 